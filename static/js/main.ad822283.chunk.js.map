{"version":3,"sources":["Details.js","Cart.js","Home.js","MyCart.js","App.js","serviceWorker.js","index.js"],"names":["ReactModal","setAppElement","Details","props","handleCloseModal","setState","showModal","closeDetails","state","productData","this","Fragment","isOpen","style","overlay","backgroundColor","className","width","src","imageUrl","alt","productName","price","longDescription","onClick","React","Component","Cart","addQuantity","event","prevState","quantity","decQuantity","closeCard","saveToCartArrHandler","datatoSend","id","name","tempObj","quantityinHand","sendCartDatatoHome","quantityInHand","img_url","height","category","discount","disabled","bind","marginTop","Home","detailsEventHandler","item","isShowingDetails","tempData","closeDetailsEventHandler","showCart","addToCart","obj","pos","productsArr","findIndex","productId","sendCartDataFromHometoApp","products","map","class","key","type","value","MyCart","deleteCartItemHandler","itemId","deleteCartDataFromApp","console","log","cartArr","cartData","scope","float","App","productsArr1","description","sendCartDataFromHometoAppHandler","tempArr","splice","deleteCartDataFromAppHandler","prodPos","itemPos","filterTodo","e","updatedList","productsArrInit","filter","toLowerCase","search","target","url","axios","get","then","response","data","onChange","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad822283.chunk.js","sourcesContent":["import React from 'react';\nimport ReactModal from 'react-modal';\nimport './Details.css';\nReactModal.setAppElement('#root');\n\nclass Details extends React.Component {    \n    constructor (props) {\n        super(props);\n        this.state = {\n          showModal: true\n        };\n    }\n    handleCloseModal = () => {\n        this.setState({ showModal: false });\n        this.props.closeDetails();\n      }\n    render() {\n        const { productData } = this.props;        \n        return (\n            <React.Fragment>\n                <ReactModal   isOpen={this.state.showModal} style={{\n              overlay: {\n                backgroundColor: '#000',                \n              }\n            }}>\n                    <ul className=\"list-group\">\n                    <li className=\"list-group-item active\">Product Info</li>\n                        <li className=\"list-group-item productimg\">\n                            <img width=\"20px\" src={productData.imageUrl} alt=\"Product Image\" />\n                        </li>                        \n                        <li className=\"list-group-item\"><span className=\"label\">Product Name:</span> {productData.productName}</li>\n                        <li className=\"list-group-item\"><span className=\"label\">Product Price:</span> {productData.price}</li>\n                        <li className=\"list-group-item\"><span className=\"label\">Product Description:</span> {productData.longDescription}</li>\n                    </ul>\n                    <button className=\"btn btn-primary close-btn\" onClick={this.handleCloseModal}>Close Modal</button>\n                </ReactModal>\n            </React.Fragment>\n        );\n    }\n}\nexport default Details;","import React from 'react';\nimport ReactModal from 'react-modal';\nclass Cart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: true,\n            quantity:1,\n            quantityInHand:10\n        };\n    }\n    addQuantity = (event)=>{\n            this.setState((prevState,props)=>{\n                return({\n                    quantity:prevState.quantity+1\n                }); \n            });\n    }\n    decQuantity = (event)=>{\n        \n            this.setState((prevState,props)=>{\n                return({\n                    quantity:prevState.quantity - 1\n                }); \n            });      \n        \n    }\n    handleCloseModal = () => {            \n        this.props.closeCard();\n      }\n      saveToCartArrHandler = ()=>{\n          var {id,name,price,quantityinHand} = this.props.datatoSend;\n          var tempObj = {\n            id,  name, price,\n            quantity:this.state.quantity\n          }\n          this.props.sendCartDatatoHome(tempObj);\n      }\n    render() {\n        const { datatoSend } = { ...this.props };\n        return (\n            <React.Fragment>\n<ReactModal   isOpen={this.state.showModal} style={{\n              overlay: {\n                backgroundColor: '#000',                \n              }\n            }}>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item active\">Cart Component</li>\n                    <li className=\"list-group-item productimg\">\n                        <img src={datatoSend.img_url} alt=\"Product Image\" style={{height:'150px'}} />\n                    </li>\n                    <li className=\"list-group-item\"><span className=\"label\">Product Name:</span> {datatoSend.name}</li>\n                    <li className=\"list-group-item\"><span className=\"label\">Product Price:</span> {datatoSend.price}</li>\n                    <li className=\"list-group-item\"><span className=\"label\">Product Description:</span> {datatoSend.category}</li>\n                    <li className=\"list-group-item\"><span className=\"label\">Discount</span> {datatoSend.discount}</li>\n                    <li className=\"list-group-item\">\n\n                        <button className=\"btn btn-primary\" disabled = {this.state.quantity === this.state.quantityInHand?true:false || this.state.quantityInHand === 0 } onClick={this.addQuantity.bind(this)}>+</button>&nbsp;&nbsp;\n                        <span>{this.state.quantity}</span>&nbsp;&nbsp;\n            <button className=\"btn btn-primary\" disabled={this.state.quantity === 1?true:false} onClick={this.decQuantity.bind(this)}>-</button>\n                        <div style={{ marginTop: '10px' }}>\n                            <button className=\"btn btn-primary\" disabled={this.state.quantityInHand === 0?true:false} onClick={this.saveToCartArrHandler}>Confirm</button>&nbsp;\n                            <button className=\"btn btn-primary\" onClick={this.handleCloseModal}>Close</button>\n                        </div>\n\n                    </li>\n                </ul>\n                </ReactModal>\n            </React.Fragment>\n        );\n    }\n}\nexport default Cart;","import React from 'react';\nimport Details from './Details';\nimport Cart from './Cart';\nclass Home extends React.Component {\n   \n    constructor(props){\n        super(props);\n        this.state = {\n            tempData:{},\n            isShowingDetails: false,\n            showCart:false,\n          }\n    }\n    detailsEventHandler=(item)=>{             \n        this.setState({\n            isShowingDetails:true,\n            tempData:item\n        });\n    }\n    closeDetailsEventHandler=()=>{\n        this.setState({\n            isShowingDetails:false\n        });\n    }\n    closeCard=()=>{\n        this.setState({\n            showCart:false\n        });\n    }\n    addToCart=(obj)=>{\n        this.setState({\n            showCart:true,\n            tempData:obj\n        });\n        \n    }\n    sendCartDatatoHome = (obj) => {        \n        this.setState({\n            showCart:false\n        });        \n        var pos =  this.props.productsArr.findIndex(item=>item.productId===obj.productId);\n        //console.log(pos);\n        //this.empArr.splice(pos,1,obj);\n        var preQuantity =  this.props.productsArr[pos].quantityinHand;\n        var newQuantity =  preQuantity -  obj.quantity;\n\n        this.setState({\n           // this.productsArr[pos].quantityinHand:newQuantity\n        });\n        this.props.sendCartDataFromHometoApp(obj);\n    }\n    render() {\n        var productImgStyle = {width:'80px',height:'100px'}\n        var products = this.props.productsArr.map((item) => {\n            return (\n                <div class=\"item col-xs-4 col-lg-4\" key={item.id}>\n                        <div class=\"thumbnail card\">\n                            <div class=\"img-event\">\n                                <img height=\"100\" class=\"group list-group-image img-fluid\" src={item.img_url} alt=\"\" />\n                            </div>\n                            <div class=\"caption card-body\">\n                                <h4 class=\"group card-title inner list-group-item-heading\">\n                                    {item.name}</h4>\n                                <p class=\"group inner list-group-item-text\">\n                                    {item.category}</p>\n                                <div class=\"row\">\n                                    <div class=\"col-xs-12 col-md-6\">\n                                        <p class=\"lead\">\n                                            {item.price}</p>\n                                    </div>\n                                    <div class=\"col-xs-12 col-md-6\">\n                                        <input className=\"btn btn-warning\" type=\"button\" value=\"Add to Card\" onClick={this.addToCart.bind(this,item)}/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                </div>\n                \n            );\n        });\n        return (\n            <div class=\"container\">\n                <div id=\"products\" class=\"row view-group\">\n                    {products}\n                </div>\n            {this.state.isShowingDetails && <Details productData={this.state.tempData} closeDetails={this.closeDetailsEventHandler}></Details>}   \n            {this.state.showCart && <Cart datatoSend={this.state.tempData} sendCartDatatoHome={this.sendCartDatatoHome} closeCard={this.closeCard}></Cart>}            \n            </div>\n            \n        );\n    }\n}\nexport default Home;","import React from 'react';\nimport ReactModal from 'react-modal';\nclass MyCart extends React.Component {\n    deleteCartItemHandler=(itemId)=>{\n        //console.log(\"delete method\"+item);\n        this.props.deleteCartDataFromApp(itemId);\n    }\n    handleCloseModal = () => {            \n        this.props.closeCard();\n      }\n    render(){\n        console.log(this.props.cartArr);\n        var cartData = this.props.cartArr.map((item) => {\n            return(\n                <tr key={item.id}  className=\"table-primary1\">                \n                <td scope=\"row\">{item.name}</td>\n                <td scope=\"row\">{item.quantity}</td>\n                <td>{item.price * item.quantity}</td>    \n                <td>\n                <button className=\"btn btn-danger\" onClick={this.deleteCartItemHandler.bind(this,item)}>Delete</button>\n                </td>            \n            </tr>\n            ) \n        });\n        return(            \n            \n            <div className=\"container-fluid\">\n            <ReactModal  isOpen=\"true\"  style={{\n              overlay: {\n                backgroundColor: '#000',                \n              }\n            }}>\n            \n                <table className=\"table\">\n                    <thead className=\"thead-primary\" >\n                        <tr>                                                    \n                            <th scope=\"col\">Product Name</th>\n                            <th scope=\"col\">Quantity</th>\n                            <th scope=\"col\">Price</th>\n                            <th>&nbsp;</th>                            \n                        </tr>\n                    </thead>\n                    <tbody>\n                    {cartData}                        \n                    </tbody>\n                </table>   \n                <div style={{ marginTop: '10px', float: 'right' }}>\n                    <button className=\"btn btn-primary\" onClick={this.handleCloseModal}>Close</button>\n                </div>\n                </ReactModal>\n                </div>\n                 \n        );\n    }\n}\nexport default MyCart;","import React from 'react';\nimport axios from \"axios\";\n//import logo from './logo.svg';\nimport './App.css';\nimport Home from './Home.js';\nimport MyCart from './MyCart';\nconst API_URL = 'https://api.myjson.com/bins/qzuzi';\nclass App extends React.Component {\n  productsArr1 = [\n    { productId: 'p101', productName: 'Box', description: 'Box Desc', longDescription: 'Box Long Desc', price: 100, quantityinHand: 10, imageUrl: 'product.jpg' },\n    { productId: 'p102', productName: 'Iphone 7', description: 'phone Desc', longDescription: 'phone Desc', price: 100, quantityinHand: 10, imageUrl: 'iphone.png' },\n    { productId: 'p103', productName: 'Box', description: 'Box Desc', longDescription: 'Box Long Desc', price: 100, quantityinHand: 10, imageUrl: 'product.jpg' },\n    { productId: 'p104', productName: 'Box', description: 'Box Desc', longDescription: 'Box Long Desc', price: 100, quantityinHand: 10, imageUrl: 'product.jpg' },\n    { productId: 'p105', productName: 'iPhone', description: 'iPhone Desc', longDescription: 'iPhone Long Desc', price: 30000, quantityinHand: 10, imageUrl: 'iphone.png' },\n]; \n  cartArr = [];\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCart:false, productsArr: [], productsArrInit: []\n    }\n  }\n  closeCard=()=>{\n        this.setState({\n            showCart:false\n        });\n    }\n  componentDidMount() {\n    const url = `${API_URL}`;\n    axios.get(url).then(response => response.data)\n    .then((data) => {\n    \t//this.productsArr = data;\n        this.setState({ productsArr: data, productsArrInit: data });\n        //console.log(this.state.productsArrInit);\n     })\n  }\n  sendCartDataFromHometoAppHandler = (obj) => {\n  \n    var pos =  this.cartArr.findIndex(item=>item.id===obj.id);\n    if(pos !== -1){\n      var tempData = this.cartArr[pos];\n      //console.log(tempData);      \n      tempData.quantity +=  obj.quantity;\n      var tempArr = [...this.cartArr];\n      tempArr.splice(pos,1,tempData);\n      this.cartArr = [...tempArr];\n    }else{\n      this.cartArr =  [...this.cartArr,obj];\n      //console.log(this.cartArr);\n    }        \n    \n    // var prodPos = this.state.productsArr.findIndex(item=>item.id === obj.id);\n    // var tempData = this.state.productsArr[prodPos];\n    // tempData.quantityinHand -= obj.quantity;\n    // var tempArr = [...this.state.productsArr];\n    // tempArr.splice(pos,1,tempData);\n    // this.state.productsArr = [...tempArr];\n\n    \n  }\n  showCart=(obj)=>{\n  \tthis.setState({\n      showCart:true,\n    });\n  }\n  deleteCartDataFromAppHandler=(obj)=>{\n    \n    var prodPos = this.state.productsArr.findIndex(item=>item.id === obj.id);\n    var tempData = this.state.productsArr[prodPos];\n   // tempData.quantityinHand += obj.quantity;\n   \tvar itemPos = this.cartArr.findIndex(item=>item.id === obj.id);\n   //\talert(itemPos);\n    var tempArr = [...this.cartArr];\n    tempArr.splice(itemPos,1);    \n    this.cartArr = [...tempArr];\n    this.setState({});\n    //console.log(itemId);\n    //console.log(this.cartArr.findIndex(itemId));\n    //arr.splice(arr.findIndex(itemId), 1);\n  }\n  filterTodo=(e)=> { \n\t\t var updatedList = this.state.productsArrInit;\n\t\t updatedList = updatedList.filter((item =>{\n\t\t return item.name.toLowerCase().search(\n\t\t e.target.value.toLowerCase()) !== -1;\n\t\t }) );\n\t\t this.setState({ \n\t\t productsArr: updatedList,\n\t\t });\n\t\t // if (updatedList == 0 ) {\n\t\t // this.setState({ \n\t\t // message: true,\n\t\t // });\n\t\t // } else {\n\t\t // this.setState({ \n\t\t // message: false,\n\t\t // });\n\t\t // } \n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"header\">\n          \n        <nav class=\"navbar\">\n  \t\t\t<img src=\"star.png\" alt=\"Company Logo\" />\n\t\t    <form class=\"form-inline\">\n\t\t        <input type=\"text\" className=\"center-block\"  onChange={this.filterTodo} />\n\t\t        <img src=\"cart.png\" onClick={this.showCart} />\n\t\t    </form>\n\t\t</nav>\n          <div class=\"clearfix marging10\"></div>\n          <Home productsArr={this.state.productsArr} sendCartDataFromHometoApp={this.sendCartDataFromHometoAppHandler} />\n          {this.state.showCart ? <MyCart closeCard={this.closeCard} cartArr={this.cartArr} deleteCartDataFromApp={this.deleteCartDataFromAppHandler}></MyCart>:''}\n        </div>\n        <div id=\"navigation\"></div>\n        <div id=\"footer\"></div>\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}